name: Training Frontend Deployment - Production

on:
  push:
    branches: [main]

env:
  SERVER_IP: ${{ secrets.SERVER_IP }}
  SSH_USER: ${{ secrets.SSH_USER }}
  SSH_KEY: ${{ secrets.SSH_KEY }}
  APP_ENV: ${{ secrets.APP_ENV }}
  PORT: 6002
  PROJECT_DIR: ~/projects/training-frontend
  PROJECT_NAME: training-frontend

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      # ONLY FOR FASTER DEPLOYMENT
      - name: Install dependencies and build locally
        run: |
          npm ci
          npm run build

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ env.SSH_KEY }}
          known_hosts: "just-a-placeholder-so-we-dont-get-errors"

      - name: Create deployment package
        run: |
          # Create a tarball excluding node_modules and .next
          tar --exclude='node_modules' --exclude='.next' --exclude='.git' -czf /tmp/${{ env.PROJECT_NAME }}.tar.gz .

      - name: Copy files to VM
        run: |
          # Copy to VM
          scp -o StrictHostKeyChecking=no /tmp/${{ env.PROJECT_NAME }}.tar.gz ${{ env.SSH_USER }}@${{ env.SERVER_IP }}:/tmp/${{ env.PROJECT_NAME }}.tar.gz

      - name: Extract files on VM
        run: |
          ssh -o StrictHostKeyChecking=no ${{ env.SSH_USER }}@${{ env.SERVER_IP }} << 'EOF'
          rm -rf ${{ env.PROJECT_DIR }}
          mkdir -p ${{ env.PROJECT_DIR }}
          tar -xzf /tmp/${{ env.PROJECT_NAME }}.tar.gz -C ${{ env.PROJECT_DIR }}
          rm /tmp/${{ env.PROJECT_NAME }}.tar.gz
          EOF

      - name: Set up environment file
        run: |
          ssh -o StrictHostKeyChecking=no ${{ env.SSH_USER }}@${{ env.SERVER_IP }} << 'EOF'
          cd ${{ env.PROJECT_DIR }}
          echo "${{ env.APP_ENV }}" > .env
          EOF

      - name: Install dependencies and build
        run: |
          ssh -o StrictHostKeyChecking=no ${{ env.SSH_USER }}@${{ env.SERVER_IP }} << 'EOF'
          cd ${{ env.PROJECT_DIR }}
          npm install
          npm run build
          EOF

      - name: Deploy with PM2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ env.SSH_USER }}@${{ env.SERVER_IP }} << 'EOF'
          cd ${{ env.PROJECT_DIR }}
          pm2 delete ${{ env.PROJECT_NAME }} || true
          pm2 start npm --name ${{ env.PROJECT_NAME }} -- start -- -p ${{ env.PORT }}
          pm2 save
          EOF
